Криптологія, криптографія та криптоаналіз

Перейдемо до аналізу теорії, яка знадобиться тобі під час написання підсумкового проєкту. Давай дізнаємося більше про криптологію та її складові. А заразом — більше про шифр, який ти будеш використовувати під час написання підсумкового практичного проєкту.
1. Криптологія та її складові

Криптологія — це область знань, до якої входить:

    Криптографія (наука про шифри).

    Предмет вивчення криптографії — шифрування інформації для її захисту від несанкціонованого доступу. Такою інформацією може бути текст, цифрове зображення, звуковий сигнал тощо. Під час шифрування утворюється зашифрована версія інформації (даних), яку називають шифротекстом, закритим текстом, криптограмою.

    Криптоаналіз (методи розкриття цих шифрів).

    Криптоаналіз вивчає методи розкриття шифрів та способи їх застосування. Тобто виконує зворотне завдання: вивчає способи перетворити шифровану інформацію на відкриту.

2. Криптографічний ключ

Ключ — це набір даних, за допомогою якого виконується шифрування та розшифрування інформації. Успішність дешифрування залежить від ключа, що використовується. Якщо з будь-якої причини втрачено доступ до нього, розшифрувати дані буде неможливо.

Обсяг інформації, що зберігається у криптографічних ключах, вимірюють у бітах. А це означає, що у криптографічного ключа є довжина. Максимальна надійність шифрування забезпечується за довжини від 128 біт.
Різновиди криптографічних ключів:

    Симетричні (секретні). Їх використовують у алгоритмах симетричного типу. Основне призначення — зворотне чи пряме криптографічне перетворення (шифрування/дешифрування, перевірка коду автентифікації повідомлення).

    Асиметричні. Застосовуються у шифрувальних алгоритмах асиметричного типу (наприклад, під час перевірки електронного цифрового підпису).

Ми будемо працювати із симетричним алгоритмом шифрування, тому не вдаватимемося в зайві подробиці.
3. Алфавіт у криптографії

Алфавіт — це скінченна множина символів, які використовують для кодування інформації символів.
4. Підходи до криптоаналізу

Існує багато різних підходів та методів до криптоаналізу (злому шифрів).

Опишемо найпростіші з них:

    Brute force (брутфорс, пошук грубою силою) — перебирання ключів, яке виконується доти, доки не знайдемо придатний. Плюс методу полягає у простоті, мінус — у тому, що він не придатний для шифрів, які використовують велику кількість можливих ключів.

    Криптоаналіз на основі статистичних даних — у разі такого підходу збирається статистика щодо входження різних символів у зашифрованому тексті, а потім для їх розшифрування використовуються статистичні дані про частоту входження у відкритий текст різних символів.

    Наприклад: ми знаємо, що використання букви “П” у текстах становить 8 %. Аналізуючи зашифрований текст, ми шукаємо символ, який зустрічається у відсотковому співвідношенні таку саму кількість разів, і робимо висновок, що це буква “П”.

    Мінус цього підходу — залежність від мови, авторства тексту та його стилістики.

5. Шифр Цезаря

Це один із найпростіших і найвідоміших методів шифрування. Назвали його, звісно ж, на честь імператора Гая Юлія Цезаря, який застосовував його для таємного листування з генералами.

Шифр Цезаря — це шифр підставлення: у ньому кожен символ у відкритому тексті замінюють на символ, який перебуває на певному постійному числі позицій ліворуч або праворуч від нього в алфавіті.

Допустимо, ми встановлюємо зсув на 3. У такому випадку А заміниться на Г, Б стане Д і так далі.

Це мінімум теоретичних даних, які знадобляться тобі для виконання підсумкового проєкту. Переходимо до опису завдання!

Можна прочитати лекцію CS50
Підсумковий проєкт до модуля Java Syntax. Пишемо криптоаналізатор

Завдання: написати програму, яка працює із шифром Цезаря.

За основу криптографічного алфавіту візьми всі літери Українського або Англійського алфавіту та знаки пунктуації (. , ”” : - ! ? ПРОБІЛ). Якщо трапляються символи, які не входять до нашого криптографічного алфавіту, просто пропусти їх.
Обов’язкові вимоги

У програми має бути 2 режими:

    Шифрування / розшифрування Програма повинна зашифровувати та розшифровувати текст, використовуючи заданий криптографічний ключ.

    Програма повинна отримувати шлях до текстового файлу з вихідним текстом та на його основі створювати файл із зашифрованим текстом.

    Криптоаналіз методом brute force

    Програма повинна зламувати зашифрований текст, переданий у вигляді текстового файлу.

    Якщо користувач обирає brute force (брутфорс, пошук грубою силою), програма повинна самостійно, шляхом перебору, підібрати ключ і розшифрувати текст.

    Подумай, який критерій програма повинна сприймати як сигнал успішного підбору ключа. Можливо, потрібно звернути увагу на прогалини між словами чи правильність використання знаків пунктуації.

Додаткові вимоги (опціонально)

1. Криптоаналіз методом статистичного аналізу

У користувача програми має бути можливість обрати один із двох методів криптоаналізу. Якщо користувач обирає метод статистичного аналізу, йому потрібно запропонувати завантажити ще один додатковий файл із текстом, бажано — того самого автора і тієї самої стилістики. На основі завантаженого файлу програма повинна скласти статистику входження символів і після цього спробувати використати статистику для криптоаналізу зашифрованого тексту.

2. User Interface

Всі діалогові вікна з користувачем роби на власний розсуд. За бажанням можна використовувати графічні фреймворки Swing, JavaFX.

Готове рішення завантаж у публічний Git-репозиторій.

Проєкт перевіряється під час проходження його групою